    # Generated by Django 4.0.1 on 2022-02-01 09:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Category_name')),
                ('name_ru', models.CharField(max_length=50, null=True, unique=True, verbose_name='Category_name')),
                ('name_uz', models.CharField(max_length=50, null=True, unique=True, verbose_name='Category_name')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='Language name')),
                ('code', models.CharField(blank=True, max_length=256, verbose_name='Language code')),
                ('greetings', models.CharField(blank=True, max_length=256, verbose_name='Greeting message')),
                ('name_ask', models.CharField(blank=True, max_length=256, verbose_name='Asking for a name')),
                ('phone_ask', models.CharField(blank=True, max_length=256, verbose_name='Asking for a phone')),
                ('menu', models.CharField(blank=True, max_length=256, verbose_name='Menu message')),
                ('category_menu', models.CharField(blank=True, max_length=256, verbose_name='Category button in the menu')),
                ('question_menu', models.CharField(blank=True, max_length=256, verbose_name='"Ask a question" button ')),
                ('chat_menu', models.CharField(blank=True, max_length=256, verbose_name='"Group-chat menu" button ')),
                ('info_menu', models.CharField(blank=True, max_length=256, verbose_name='"Information about us" button')),
                ('info', models.CharField(blank=True, max_length=256, verbose_name='Information')),
                ('send_contact', models.CharField(blank=True, max_length=256, verbose_name='"Send contact" button')),
                ('language_set', models.CharField(blank=True, max_length=256, verbose_name='Particular language has been chosen')),
                ('successful_registration', models.CharField(blank=True, max_length=256, verbose_name='Successful registatration')),
                ('back', models.CharField(blank=True, max_length=256, verbose_name='Back button')),
                ('chat', models.CharField(blank=True, max_length=256, verbose_name='Link to chat')),
                ('language_selection', models.CharField(blank=True, max_length=256, verbose_name='Select a language')),
                ('ask_question', models.CharField(blank=True, max_length=256, verbose_name='Ask a anonimus question')),
                ('check_question', models.CharField(blank=True, max_length=256, verbose_name='Chek if question is correct')),
                ('yes_q', models.CharField(blank=True, max_length=256, verbose_name='Yes in questions')),
                ('no_q', models.CharField(blank=True, max_length=256, verbose_name='No, enter again')),
                ('answered_question', models.CharField(blank=True, max_length=256, verbose_name='Your question have been answered')),
                ('question', models.CharField(blank=True, max_length=256, verbose_name='User`s question')),
                ('answer', models.CharField(blank=True, max_length=256, verbose_name='Answer to the question')),
                ('question_created', models.CharField(blank=True, max_length=256, verbose_name='Question was succesfully created')),
                ('categories', models.CharField(blank=True, max_length=256, verbose_name='Choose category')),
                ('key_words', models.CharField(blank=True, max_length=256, verbose_name='Write keyword in order to find publication')),
                ('reference_link', models.CharField(blank=True, max_length=256, verbose_name='Link to the resource')),
                ('posts_found', models.CharField(blank=True, max_length=256, verbose_name='There are posts on your request')),
                ('no_posts', models.CharField(blank=True, max_length=256, verbose_name='There are no posts')),
                ('numbers_name', models.CharField(blank=True, max_length=256, verbose_name='There are numbers in name')),
                ('incorrect_phone', models.CharField(blank=True, max_length=256, verbose_name='Phone was inputed inproperly!')),
                ('video', models.CharField(blank=True, max_length=256, verbose_name='Video-instruction')),
                ('video_text', models.CharField(blank=True, max_length=256, verbose_name='Here is the link to the video')),
                ('select_poll', models.CharField(blank=True, max_length=256, verbose_name='Select poll')),
                ('no_polls', models.CharField(blank=True, max_length=256, verbose_name='There are no polls')),
                ('poll_button', models.CharField(blank=True, max_length=256, verbose_name='"Select poll" buton')),
                ('selected_category', models.CharField(blank=True, max_length=256, verbose_name='Menu for category')),
                ('find', models.CharField(blank=True, max_length=256, verbose_name='Find posts')),
                ('points', models.CharField(blank=True, max_length=256, verbose_name='Points for answer')),
                ('results', models.CharField(blank=True, max_length=256, verbose_name='Results of poll')),
                ('poll_selected', models.CharField(blank=True, max_length=256, verbose_name='Questionnaire have been selected')),
                ('back_category', models.CharField(blank=True, max_length=256, verbose_name='Back to categories')),
                ('anonymous', models.CharField(blank=True, max_length=256, verbose_name='"Stay Anonymous" button')),
                ('skip', models.CharField(blank=True, max_length=256, verbose_name='"Skip" button')),
                ('suggestion', models.CharField(blank=True, max_length=256, verbose_name='"Add suggestion" button')),
                ('thanks_suggestion', models.CharField(blank=True, max_length=256, verbose_name='Thanks for suggestion!')),
                ('write_suggestion', models.CharField(blank=True, max_length=256, verbose_name='Write your suggestion')),
                ('age', models.CharField(blank=True, max_length=256, verbose_name='Age of user')),
                ('gender', models.CharField(blank=True, max_length=256, verbose_name='User`s gender')),
                ('weight', models.CharField(blank=True, max_length=256, verbose_name='User`s weight')),
                ('height', models.CharField(blank=True, max_length=256, verbose_name='User`s height,')),
                ('male', models.CharField(blank=True, max_length=256, verbose_name='Male')),
                ('female', models.CharField(blank=True, max_length=256, verbose_name='Female')),
                ('incorrect_data', models.CharField(blank=True, max_length=256, verbose_name='Input is incorrect')),
                ('yes', models.CharField(blank=True, max_length=256, verbose_name='yes')),
                ('no', models.CharField(blank=True, max_length=256, verbose_name='no')),
                ('final_score', models.CharField(blank=True, max_length=256, verbose_name='User`s score for poll')),
                ('marriage', models.CharField(blank=True, max_length=256, verbose_name='Is user married?')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100, verbose_name='User telegram ID')),
                ('text', models.TextField(verbose_name='Text of the question')),
                ('status', models.BooleanField(default=False, verbose_name='Is question answered ?')),
                ('answer', models.TextField(blank=True, null=True, verbose_name='Answer to the question')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='Asked at:')),
                ('user_age', models.PositiveIntegerField(verbose_name='User`s age')),
                ('user_gender', models.CharField(max_length=256, verbose_name='User`s gender')),
                ('user_mariage', models.CharField(max_length=256, verbose_name='User`s marriage status')),
                ('user_weight', models.CharField(max_length=256, verbose_name='User`s weight')),
                ('user_height', models.CharField(max_length=256, verbose_name='User`s height')),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='Name of the questionnaire')),
                ('name_ru', models.CharField(max_length=256, null=True, unique=True, verbose_name='Name of the questionnaire')),
                ('name_uz', models.CharField(max_length=256, null=True, unique=True, verbose_name='Name of the questionnaire')),
                ('questions_number', models.IntegerField(default=5, verbose_name='Number of questions')),
                ('answers', models.TextField(verbose_name='Table with answer-points')),
                ('answers_ru', models.TextField(null=True, verbose_name='Table with answer-points')),
                ('answers_uz', models.TextField(null=True, verbose_name='Table with answer-points')),
                ('number_answers', models.CharField(default=5, max_length=256, verbose_name='Number of answers')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.category')),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text of suggestion')),
                ('user_id', models.CharField(max_length=100, verbose_name='Telegram if of the user')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_id', models.CharField(max_length=100, unique=True, verbose_name='User`s TG id')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='User`s name')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='User`s phone')),
                ('question', models.TextField(blank=True, null=True, verbose_name='User`s question')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Is user anonymous?')),
                ('age', models.PositiveIntegerField(blank=True, null=True, verbose_name='User`s age')),
                ('marriage', models.CharField(blank=True, max_length=256, null=True, verbose_name='User`s marriage status')),
                ('gender', models.CharField(blank=True, max_length=256, null=True, verbose_name='User`s gender')),
                ('weight', models.CharField(blank=True, max_length=256, null=True, verbose_name='User`s weight')),
                ('height', models.CharField(blank=True, max_length=256, null=True, verbose_name='User`s height')),
                ('score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Overall score for poll')),
                ('number_answers', models.PositiveIntegerField(blank=True, default=0, verbose_name='Number of question')),
                ('chosen_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.category')),
                ('language', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='bot.language')),
                ('poll', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionPoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text of the question')),
                ('text_ru', models.TextField(null=True, verbose_name='Text of the question')),
                ('text_uz', models.TextField(null=True, verbose_name='Text of the question')),
                ('questionnaire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=256, verbose_name='Publication`s topic')),
                ('image', models.ImageField(upload_to='images/', verbose_name='Image for publication')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Publication`s text')),
                ('link', models.CharField(max_length=100, verbose_name='Reference link')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.category')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bot.language')),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name of link')),
                ('link', models.CharField(max_length=100, verbose_name='Link itself')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.category')),
            ],
        ),
        migrations.CreateModel(
            name='KeyWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=256, verbose_name='Keyword')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bot.publication')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=256, verbose_name='Text of the answer')),
                ('text_ru', models.CharField(max_length=256, null=True, verbose_name='Text of the answer')),
                ('text_uz', models.CharField(max_length=256, null=True, verbose_name='Text of the answer')),
                ('points', models.IntegerField(null=True, verbose_name='Number of points for answer')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.questionpoll')),
                ('questionnaire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.questionnaire')),
            ],
        ),
    ]
